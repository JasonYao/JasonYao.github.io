{"metadata":{"title":"Tech Stack Retro (2021)","slug":"tech-stack-retro-2021","created_on":"2021-03-31 02:18:20 +0800 +0800","published_on":"2021-03-31 02:18:20 +0800 +0800","modified_on":"2021-11-30 02:55:57 -0500 -0500","categories":["updates"],"tags":["meta","personal site"],"thumbnail":"images/annual-site-bill.png","thumbnail_alt_text":"That's like 2 small orders of Wah Fung. Yes, Cha-siu roasted port is officially a unit of measurement. It's a measurement of happiness.","permalink":"https://www.jasonyao.com/posts/2021/03/31/tech-stack-retro-2021/","summary":"Also, hello (again)! It\u0026rsquo;s been almost 4 years since I last touched anything to do with my personal site, with the good old excuse of laziness, work, other stuff to do, no stuff to do, and trying to figure out how to be a (barely) functional adult in this world.","reading_time":"6-minute read"},"data":{"content":"Also, hello (again)! It\u0026rsquo;s been almost 4 years since I last touched anything to do with my personal site, with the good old excuse of laziness, work, other stuff to do, no stuff to do, and trying to figure out how to be a (barely) functional adult in this world.\nSince that time, tech has marched on, and I thought I might do a bit of a retrospective on how my chosen tech stack\u0026rsquo;s held up in terms of achieving my original goal of creating an online presence in the most penny-pinching cost-efficient manner.\nGoal recap (optimizing for laziness and my wallet) As a reminder, the original goal of mine 4 years ago was to hustle leverage as many existing free services as humanly possible due to me being a lazy cheapskate efficient and frugal uni student.\n Maintenance burden should be 0- if I do absolutely nothing to maintain this, everything should continue to Just Workâ„¢ Everything must be free, or as close to 0 as humanly possible Optimizations and extensions should be simple, easy, and intuitive  Constraints  I do want the ability to have the site versioned, so if I ever need to, I can revert back to an older version of a site easily I do want my content to be automatically optimized, so it can be shared correctly on Facebook and show up as a rich snippet on Google I do want solving for scale to be trivial, ideally in a way where it\u0026rsquo;s simple to add in the ability to deal with theoretical spikes in traffic I do want custom domain emails, so I can send and receive emails from foobar@JasonYao.com in Gmail without having to think about it  As everybody knows, your solution to a problem is informed just as equally by what you\u0026rsquo;re not solving for, as much as it is by the problem itself.\n I don\u0026rsquo;t need full CMS capabilities, or the ability to have dynamic backend functionality for my online presence (though if I do in the future I\u0026rsquo;d like for it to be easy to add in) I don\u0026rsquo;t need commerce or shopping capabilities I don\u0026rsquo;t want to have to muck about and style my site from scratch- using and customizing a pre-built theme is fine, but CSS without guide rails hurts my very smooth brain  Tech Stack Architecture Here\u0026rsquo;s what the network request looks like from a user   Your standard CDN-fronted, static site solution   The thing to note here is that there\u0026rsquo;s nothing backing the webhost here- there\u0026rsquo;s no database or microservice backing it up, since the entire website is statically created at build time, and simply uses Github Pages to serve its content.\nTo actually update the content, the developer user flow used to look like this (note that everything in this diagram is automated):   (Ab)using Github by using source control for full site deployments (and rollbacks if necessary)   Now in 2021, it\u0026rsquo;s been consolidated a bit but the general approach is still the same   Basically the same as in 2017 just with different service providers. The fact that all of this is free still kinda blows my mind a bit, and the fact that it\u0026#39;s all automated feels great   Tech Stack Comparison    Service Service Provider (2017) Service Provider (2021) Cost Per Annum (2017) Cost Per Annum (2021)     Custom domain Namecheap  Cloudflare Registrar  $10.87 USD $8.03 USD    Custom domain email Mailgun - $0.00 USD $0.00 USD   Website hosting \u0026amp; Continuous Deployment (CD) Github Pages - $0.00 USD $0.00 USD   Continuous Integration (CI) TravisCI  Github Actions  $0.00 USD $0.00 USD   Static site generator Jekyll  Hugo  $0.00 USD $0.00 USD   Content Delivery Network (CDN) Cloudflare - $0.00 USD $0.00 USD       Tech Stack Total Cost Per Annum     2017 Tech Stack $10.87 USD   2021 Tech Stack $8.03 USD     In both the 2017 and the new 2021 system, the general format is still the same, wherein we generate a static site and use GitHub Pages for deployment In both systems, we gain a lot of benefits from this architecture:  There\u0026rsquo;s no server or services that I need to manage Scaling horizontally is as simple as fronting the static content with 1 or more CDN or any other edge server Things are fast since everything is pre-computed, and the only bottleneck to painting content for users is literally just the network. Development cycle for new content is trivial, since it\u0026rsquo;s just \u0026ldquo;fire and forget\u0026rdquo; (or in this case \u0026ldquo;push and forget\u0026rdquo;).   Therefore, in our new 2021 system, we still retain all of our benefits from the previous 2017 system, with three major benefits:  Modernizing the tech stack: By using Hugo to template our site, and gain a huge speed boost in both developer productivity and in site generation times (previous times were around 30s, I\u0026rsquo;m now generating this site in ~150ms) Lowering ongoing costs: By using Cloudflare Registrar, we can avoid having to pay any additional costs every year to the domain name registrar, since Cloudflare has gotten rid of adding in a margin for their DNR system.   Stuff like this is why I love Cloudflare    Keeping to our principles: I used to love TravisCI, before they were acquired by a private equity firm. Ever since they drove out all of their best talent, I knew the writing was on the wall for them. With their recent large-scale security breach in which Travis has followed none of the proper disclosures for, I took this tech stack overhaul as an opportunity to migrate from TravisCI over to GitHub Actions, which has the additional benefit of also modernizing the tech stack a bit.    At the end of the day, thanks to our tech stack selection and architecture, we have a publicly-accessible website that is functionally free, except for the annual domain cost.\n  The domain itself is pretty much my only ongoing cost... Now if only I can find a reputable place to get a free domain, and then _really_ make this blog post clickbait   Going more in depth on swapping out tech stacks If anybody reading this would like more details on what the process of migrating my tech stack over looked like, I go into more depth over in my 2021 tech stack migration guide.\nConclusion  With this setup, I\u0026rsquo;m now primed for being able to write a lot more frequently than before. Or fall into the trap of never writing a blog post again until I feel guilty enough 4 years down the line, only time will tell.  "},"git_information":{"short_hash":"008df4d","commit_timestamp":"2021-11-30 02:55:57 -0500 -0500","author":"Jason Yao <Hello@JasonYao.com>","full_hash":"008df4dab6b58959c47cd8643a357c6feec2c9f7","subject":"jyao/relaunch announcement (#36)","commit_link":"https://github.com/JasonYao/JasonYao.github.io/commit/008df4dab6b58959c47cd8643a357c6feec2c9f7"}}